// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------------------- TEST --------------------------------------

model User {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Profile   Profile?
}

model Profile {
  id   String @id @default(cuid())
  name String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ----------------------------------------------------------------------------------

// model User {
//   id        Int      @id @default(autoincrement())
//   username  String?  @unique
//   email     String   @unique
//   password  String
//   avatar    String?
//   // twoFactorEnabled Boolean  @default(false)
//   // twoFactorSecret  String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Friends {
//   id        Int      @id @default(autoincrement())
//   status    String
//   userId    Int
//   // user      User     @relation("FriendsSent", fields: [userId], references: [id])
//   friendId  Int
//   // friend    User     @relation("FriendsReceived", fields: [friendId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model FriendRequest {
//   id        Int      @id @default(autoincrement())
//   status    String
//   userId    Int
//   // user      User     @relation("SentFriendRequests", fields: [userId], references: [id])
//   friendId  Int
//   // friend    User     @relation("ReceivedFriendRequests", fields: [friendId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Game {
//   id        Int      @id @default(autoincrement())
//   userId    Int
//   // user      User     @relation("Games", fields: [userId], references: [id])
//   matchId   Int
//   // match     Match    @relation("Games", fields: [matchId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Match     Match    @relation(fields: [matchId], references: [id])
// }

// model Match {
//   id        Int      @id @default(autoincrement())
//   winnerId  Int
//   // winner    User     @relation("MatchHistory", fields: [winnerId], references: [id])
//   loserId   Int
//   // loser     User     @relation("MatchHistory", fields: [loserId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Game      Game[]
// }

// model MatchHistory {
//   id        Int      @id @default(autoincrement())
//   winnerId  Int
//   // winner    User     @relation("MatchHistory", fields: [winnerId], references: [id])
//   loserId   Int
//   // loser     User     @relation("MatchHistory", fields: [loserId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
